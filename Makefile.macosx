PROGRAM=rts
PROGVER=0.3


CXX=c++
MAKEDEPEND=$(CXX) -MM
GLM=lib/glm-0.9.2.7
JSON=lib/jsoncpp
STBI=lib/stbi
STBTT=lib/stb_truetype
FMOD=macosx/fmod
BOOSTDIR=lib/boost_1_50_0
V8DIR=lib/v8-osx
LDFLAGS=-lGLEW -framework SDL -framework Cocoa -framework OpenGL \
				-lboost_system -lboost_filesystem $(V8DIR)/*.a
OBJDIR=obj
SRCDIR=src
EXECDIR=$(SRCDIR)/exec
RTSDIR=$(SRCDIR)/rts
COMMONDIR=$(SRCDIR)/common
TESTDIR=$(SRCDIR)/tests
GTESTDIR=lib/gtest-1.6.0
GTESTLIB=lib/gtest-1.6.0/libgtest.a
CXXFLAGS=-g -O0 -Wall -I$(GLM) -std=c++11 -stdlib=libc++ -I$(JSON) -I$(STBI) \
				 -I$(STBTT) -I$(SRCDIR) -I$(GTESTDIR)/include -U__STRICT_ANSI__\
				 -I$(BOOSTDIR) -I$(FMOD)/inc -I$(V8DIR)/include
#CXXFLAGS+=-DSECTION_RECORDING

COMMONSRC=$(wildcard $(COMMONDIR)/*.cpp)
TESTSRC=$(wildcard $(TESTDIR)/*.cpp)
RTSSRC=$(wildcard $(RTSDIR)/*.cpp)

TESTOBJ = $(patsubst $(TESTDIR)/%,$(OBJDIR)/%,$(patsubst %.cpp,%.o,$(TESTSRC)))
COMMONOBJ = $(patsubst $(COMMONDIR)/%,$(OBJDIR)/%,$(patsubst %.cpp,%.o,$(COMMONSRC))) $(JSON)/jsoncpp.o
RTSOBJ = $(patsubst $(RTSDIR)/%,$(OBJDIR)/%,$(patsubst %.cpp,%.o,$(RTSSRC))) obj/rts-main.o
DEPTHGENOBJ = obj/depthfieldgen.o

RESOURCES = config.json local.json models scripts shaders images fonts

all: obj $(PROGRAM) depthfieldgen

$(OBJDIR)/SDLMain.o: macosx/SDLMain.m
	$(CXX) -g -O0 -Wall $^ -c -o $@


$(PROGRAM): $(RTSOBJ) $(COMMONOBJ) local.json $(OBJDIR)/SDLMain.o
	$(CXX) $(CXXFLAGS) -o $@ $(RTSOBJ) $(COMMONOBJ) $(LDFLAGS) $(OBJDIR)/SDLMain.o

depthfieldgen: $(DEPTHGENOBJ) $(COMMONOBJ)
	$(CXX) $(CXXFLAGS) -o $@ $(DEPTHGENOBJ) $(COMMONOBJ)

tests: $(TESTOBJ) $(GTESTLIB) $(COMMONOBJ)
	$(CXX) $(CXXFLAGS) -o $@ $(TESTOBJ) $(COMMONOBJ) $(GTESTLIB) -lpthread

$(OBJDIR)/%.o: $(RTSDIR)/%.cpp
	$(CXX) -c $(CXXFLAGS) -o $(OBJDIR)/$*.o $<
$(OBJDIR)/%.o: $(COMMONDIR)/%.cpp
	$(CXX) -c $(CXXFLAGS) -o $(OBJDIR)/$*.o $<
$(OBJDIR)/%.o: $(EXECDIR)/%.cpp
	$(CXX) -c $(CXXFLAGS) -o $(OBJDIR)/$*.o $<
$(OBJDIR)/%.o: $(TESTDIR)/%.cpp
	$(CXX) -c $(CXXFLAGS) -o $(OBJDIR)/$*.o $<
$(DEPDIR)/%.d: $(RTSDIR)/%.cpp

$(JSON)/jsoncpp.o: $(JSON)/jsoncpp.cpp
	$(CXX) -c $(CXXFLAGS) -o $@ $^

$(GTESTLIB): $(GTESTDIR)/src/gtest-all.cc
	$(CXX) -I$(GTESTDIR)/include -I$(GTESTDIR) -c $(GTESTDIR)/src/gtest-all.cc -o $(GTESTDIR)/src/gtest-all.o
	$(CXX) -I$(GTESTDIR)/include -I$(GTESTDIR) -c $(GTESTDIR)/src/gtest_main.cc -o $(GTESTDIR)/src/gtest_main.o
	ar -rv $(GTESTDIR)/libgtest.a $(GTESTDIR)/src/gtest-all.o $(GTESTDIR)/src/gtest_main.o


local.json: local.json.default
	cp local.json.default local.json

clean:
	rm -f rts tests depthfieldgen obj/* $(GTESTLIB)
	rm -rf obj/ rts.app

force_look:
	true

obj:
	mkdir -p obj

tags:
	ctags -R src

.PHONY: clean force_look config tags bundle



COMPANY=somedudes
ICONFILE=
BUNDLEPACKAGE=APPL
BUNDLESIGNATURE=????

BUNDLE=$(PROGRAM).app
MACRESOURCEFOLDER=$(BUNDLE)/Contents/Resources
MACICON=$(BUNDLE)/Contents/$(ICONFILE)
MACPKGINFO=$(BUNDLE)/Contents/PkgInfo
MACINFOPLIST=$(BUNDLE)/Contents/Info.plist 

MACRESOURCES=$(patsubst %,$(MACRESOURCEFOLDER)/%,$(RESOURCES))

bundle: $(BUNDLE) $(BUNDLE)/Contents/MacOS/$(PROGRAM) $(MACICON) $(MACPKGINFO) $(MACINFOPLIST) $(MACRESOURCES)

dist:
	mkdir -p dist
dist/$(BUNDLE): dist bundle $(BUNDLE)
	cp -r $(BUNDLE) dist/
$(PROGRAM).dmg: dist/$(BUNDLE)
	hdiutil create -ov -srcfolder ./dist $@

#  This builds the bundle's directory structure.
$(BUNDLE):
	@echo "==== Building bundle directory structure ===="
	mkdir -p $(BUNDLE)/Contents
	mkdir -p $(BUNDLE)/Contents/MacOS
	mkdir -p $(BUNDLE)/Contents/Resources
	@echo $(MACRESOURCES)

#  This builds the executable right inside the bundle.
$(BUNDLE)/Contents/MacOS/$(PROGRAM): $(PROGRAM)
	@echo "==== Copying executable ===="
	cp $^ $(BUNDLE)/Contents/MacOS/$(PROGRAM) 

#  This copies the icon file into the bundle.
$(MACICON): $(ICONFILE)
	@echo "==== Copying icon file into bundle ===="
	cp -f $(ICONFILE) $(BUNDLE)/Contents/Resources/$(ICONFILE)

#  This creates the Contents/PkgInfo file.
$(MACPKGINFO):
	@echo "==== Creating PkgInfo ===="
	touch $(MACPKGINFO)
	@echo -n "$(BUNDLEPACKAGE)$(BUNDLESIGNATURE)" > $(MACPKGINFO)

$(MACRESOURCEFOLDER)/%: %
	cp -r $^ $@

#  This creates the Contents/Info.plist file.
$(MACINFOPLIST):
	@echo "==== Creating Info.plist ===="
	touch $(MACINFOPLIST)
	@echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" >> $(MACINFOPLIST)
	@echo -n "<!DOCTYPE plist PUBLIC " >> $(MACINFOPLIST)
	@echo -n "\"-//Apple Computer//DTD PLIST 1.0//EN\" " >> $(MACINFOPLIST)
	@echo "\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">" >> $(MACINFOPLIST)
	@echo "<plist version=\"1.0\">" >> $(MACINFOPLIST)
	@echo "<dict>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleDevelopmentRegion</key>" >> $(MACINFOPLIST)
	@echo "   <string>English</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleExecutable</key>" >> $(MACINFOPLIST)
	@echo "   <string>$(PROGRAM)</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleIconFile</key>" >> $(MACINFOPLIST)
	@echo "   <string>$(ICONFILE)</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleName</key>" >> $(MACINFOPLIST)
	@echo "   <string>$(PROGRAM)</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleIdentifier</key>" >> $(MACINFOPLIST)
	@echo "   <string>com.$(COMPANY).$(PROGRAM)</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleInfoDictionaryVersion</key>" >> $(MACINFOPLIST)
	@echo "   <string>6.0</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundlePackageType</key>" >> $(MACINFOPLIST)
	@echo "   <string>$(BUNDLEPACKAGE)</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleSignature</key>" >> $(MACINFOPLIST)
	@echo "   <string>$(BUNDLESIGNATURE)</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleVersion</key>" >> $(MACINFOPLIST)
	@echo "   <string>$(PROGVER)</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleShortVersionString</key>" >> $(MACINFOPLIST)
	@echo "   <string>$(PROGVER)</string>" >> $(MACINFOPLIST)
	@echo "   <key>CFBundleGetInfoString</key>" >> $(MACINFOPLIST)
	@echo "   <string>$(PROGRAM), Version $(PROGVER), $(COMPANY)</string>" >> $(MACINFOPLIST)
	@echo "</dict>" >> $(MACINFOPLIST)
	@echo "</plist>" >> $(MACINFOPLIST)

.PHONY: depend
depend: .depend

.depend: $(COMMONSRC) $(RTSSRC) $(TESTSRC)
	$(CXX) $(CXXFLAGS) -MM -MG $^ \
		| sed -e 's/^\(.*\):/obj\/\1:/' > ./.depend


include .depend
